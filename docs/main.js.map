{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/actions/favorites.actions.ts","./src/app/core/contract/weather.contract.ts","./src/app/core/core.module.ts","./src/app/core/modules/material/material.module.ts","./src/app/core/pipes/weather-unit.pipe.ts","./src/app/core/reducers/favorite.reducer.ts","./src/app/core/services/weather.service.ts","./src/app/shared/shared.module.ts","./src/app/shared/weather/components/weather-degrees-view/weather-degrees-view.component.ts","./src/app/shared/weather/components/weather-degrees-view/weather-degrees-view.component.html","./src/app/shared/weather/components/weather-details/weather-details.component.ts","./src/app/shared/weather/components/weather-details/weather-details.component.html","./src/app/shared/weather/components/weather-favorites/weather-favorites.component.html","./src/app/shared/weather/components/weather-favorites/weather-favorites.component.ts","./src/app/shared/weather/weather.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { WeatherDetailsComponent } from './shared/weather/components/weather-details/weather-details.component';\r\nimport { WeatherFavoritesComponent } from './shared/weather/components/weather-favorites/weather-favorites.component';\r\n\r\nconst routes: Routes = [\r\n  {path: 'favorites', component: WeatherFavoritesComponent},\r\n  {path: 'home', component: WeatherDetailsComponent},\r\n  {path: '', pathMatch: 'full', redirectTo: 'home'},\r\n  { path: '**', redirectTo: 'home' }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, HostBinding, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { WeatherContract } from './core/contract/weather.contract';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit{\r\n\r\n  isChecked = true;\r\n\r\n  @HostBinding() className = '';\r\n\r\n  toggleControl = new FormControl(false);\r\n\r\n  constructor(private weatherService: WeatherContract) {}\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.toggleControl.valueChanges.subscribe(val => {\r\n      this.className = val ? 'darkMode' : '';\r\n    });\r\n\r\n    this.weatherService.getWeatherUnit().subscribe(u => {\r\n      this.isChecked = u != 'C';\r\n    });\r\n  }\r\n\r\n  ToggleTemperature(){\r\n\r\n    this.weatherService.ToggleTemperatureUnit();\r\n  }\r\n\r\n}\r\n","  <mat-toolbar class=\"toolbar-banner\">\r\n    <div class=\"logo-barber\">\r\n      <img src=\"./assets/cloudy.png\" style=\"width: 40px;height: 40px;\"/>\r\n    </div>\r\n    <span>Herolo Weather Task</span>\r\n    <div class=\"menu-left\">\r\n      <a mat-button [routerLink]=\"['home']\" routerLinkActive=\"router-link-active\"> Home </a>\r\n      <a  mat-button [routerLink]=\"['favorites']\" routerLinkActive=\"router-link-active\"> Favorites </a>\r\n\r\n    </div>\r\n    <div class=\"menu-right\">\r\n      <div class=\"dark-light-toggle\">\r\n        <mat-icon class=\"icons\">brightness_5</mat-icon>\r\n        <mat-slide-toggle [formControl]=\"toggleControl\"></mat-slide-toggle>\r\n        <mat-icon class=\"icons\">bedtime</mat-icon>\r\n      </div>\r\n      <div class=\"temperature-toggle\">\r\n        <div class=\"icons\">°C</div>\r\n        <mat-slide-toggle [checked]=\"isChecked\" (change)=\"ToggleTemperature()\"></mat-slide-toggle>\r\n        <div class=\"icons\">°F</div>\r\n      </div>\r\n    </div>\r\n  </mat-toolbar>\r\n<mat-card class=\"wrapper\">\r\n<router-outlet></router-outlet>\r\n</mat-card>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { CoreModule } from './core/core.module';\r\n\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { reducer } from './core/reducers/favorite.reducer';\r\nimport { MaterialModule } from './core/modules/material/material.module';\r\nimport { WeatherContract } from './core/contract/weather.contract';\r\nimport { WeatherTestService } from './core/services/weather.test.service';\r\nimport { WeatherService } from './core/services/weather.service';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    CoreModule,\r\n    SharedModule,\r\n    MaterialModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    ToastrModule.forRoot({\r\n      timeOut: 3500,\r\n      positionClass: 'toast-bottom-right',\r\n      progressBar: true,\r\n      progressAnimation: 'increasing',\r\n      preventDuplicates: true\r\n    }),\r\n    StoreModule.forRoot({\r\n      favorites: reducer\r\n    })\r\n  ],\r\n  providers: [\r\n    {provide: WeatherContract, useClass: WeatherService}\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Action } from '@ngrx/store';\r\nimport { Weather } from '../models/weather.model';\r\n\r\n\r\n\r\nexport const ADD_FAVORITE       = 'Add';\r\nexport const REMOVE_FAVORITE    = 'Remove';\r\n\r\nexport class AddFavorite implements Action{\r\n  readonly type = ADD_FAVORITE;\r\n\r\n  constructor(public payload: Weather){}\r\n}\r\n\r\nexport class RemoveFavorite implements Action {\r\n  readonly type = REMOVE_FAVORITE;\r\n\r\n  constructor(public payload: string){}\r\n\r\n}\r\n\r\n\r\n\r\nexport type Actions = AddFavorite | RemoveFavorite;\r\n","import { BehaviorSubject, Observable } from \"rxjs\";\r\nimport { count, filter } from \"rxjs/operators\";\r\nimport { CityGroup, CityResult, LocalizedID } from \"../models/city.result.model\";\r\nimport { ConditionsResult } from \"../models/conditions.model\";\r\nimport { WeeklyForecast } from \"../models/daily.forecast.model\";\r\nimport { Weather, WeatherType } from \"../models/weather.model\";\r\n\r\nexport abstract class WeatherContract{\r\n  WEATHER_DAYS = ['Sun','Mon','Tue','Wed','Thu'];\r\n\r\n  unitDisplay: BehaviorSubject<WeatherType> = new BehaviorSubject<WeatherType>('C');\r\n  protected cityAutoCompleteResults = new BehaviorSubject<CityGroup[]>([]);\r\n  protected baseURL = 'https://dataservice.accuweather.com/';\r\n  protected language = 'en-us';\r\n  protected weatherCache: BehaviorSubject<Weather[]> = new BehaviorSubject<Weather[]>([]);\r\n\r\n  constructor(){}\r\n\r\n  getSelectedCityID(countryName: string, city: string): string{\r\n    let res = this.cityAutoCompleteResults.value.filter(country => country.country == countryName).filter(country => country.cities.filter(c => c.LocalizedName == city));\r\n    return res[0].cities[0].ID;\r\n  }\r\n\r\n\r\n  getCityAutoComplete() : Observable<CityGroup[]>{\r\n    return this.cityAutoCompleteResults.asObservable();\r\n  }\r\n\r\n  getWeatherUnit(): Observable<WeatherType>{\r\n    return this.unitDisplay.asObservable();\r\n  }\r\n\r\n  ToggleTemperatureUnit(){\r\n    if(this.unitDisplay.value == 'C')\r\n      this.unitDisplay.next('F');\r\n    else\r\n      this.unitDisplay.next('C');\r\n  }\r\n\r\n\r\n  public setGroupCities(cities: CityResult[]){\r\n\r\n    let group:CityGroup[] = [];\r\n\r\n    let m = new Map<string, number>();\r\n    for(let i =0;i < cities.length;++i){\r\n      let countryName = cities[i].Country.LocalizedName;\r\n      if(!m.has(countryName))\r\n      {\r\n        group.push({country: countryName, cities: new Array<LocalizedID>()})\r\n        m.set(countryName, group.length - 1);\r\n      }\r\n\r\n      group[m.get(countryName)].cities.push({ID: cities[i].Key, LocalizedName: cities[i].LocalizedName});\r\n\r\n    }\r\n    this.cityAutoCompleteResults.next(group);\r\n\r\n\r\n  }\r\n\r\n\r\n   getAllCache() : Observable<Weather[]> {\r\n    return this.weatherCache.asObservable();\r\n   };\r\n  protected getWeatherIndexFromCache(city: string):number{\r\n    return this.weatherCache.value.findIndex(x => x.Name.toLowerCase() == city.toLowerCase());\r\n  }\r\n  abstract getWeatherOfCity(country: string, city: string, useCache?: boolean) : Promise<Weather>;\r\n  public abstract AutoCompleteCities(q: string) : Promise<void>;\r\n  protected abstract getCurrentConditions(locationKey: string) : Promise<ConditionsResult[]>\r\n  protected abstract getFiveDaysDailyForecasts(locationKey: string) : Promise<WeeklyForecast>;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule\r\n  ]\r\n})\r\nexport class CoreModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {ClipboardModule} from '@angular/cdk/clipboard';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule, MatDialogRef} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    A11yModule,\r\n    ClipboardModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n    ScrollingModule\r\n  ],\r\n  providers: [{provide: MatDialogRef, useValue: []}\r\n]\r\n})\r\nexport class MaterialModule { }\r\n\r\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { TemperatureUnit } from '../models/conditions.model';\nimport { WeatherType } from '../models/weather.model';\n\n@Pipe({\n  name: 'weatherUnit'\n})\nexport class WeatherUnitPipe implements PipeTransform {\n\n\n  transform(value: TemperatureUnit, unit: WeatherType = 'C',...args: unknown[]): unknown {\n\n    let res: string = '°';\n    let num: number = value.Value;\n\n    if(value.Unit == unit)\n      res += unit;\n    else if (value.Unit == 'C'){\n      num = (num * (9 / 5)) + 32;\n      res += 'F'\n    }\n    else if (value.Unit == 'F'){\n      num = (num - 32) * (5 / 9);\n      res += 'C'\n    }\n\n    return Math.round(num) + ' ' + res;\n  }\n\n}\n","import * as FavoriteActions from '../actions/favorites.actions'\r\nimport { Weather } from '../models/weather.model';\r\n\r\n\r\nexport function reducer(state: Weather[] = [], action: FavoriteActions.Actions) {\r\n  let index;\r\n    switch(action.type) {\r\n        case FavoriteActions.ADD_FAVORITE:\r\n            return [...state, action.payload];\r\n        case FavoriteActions.REMOVE_FAVORITE:\r\n            let newState = [...state];\r\n            index = newState.findIndex( x => x.ID == action.payload)\r\n            if(index >= 0)\r\n              newState.splice(index, 1);\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { WeeklyForecast } from '../models/daily.forecast.model';\r\nimport { ConditionsResult } from '../models/conditions.model';\r\nimport { CityGroup, CityResult } from '../models/city.result.model';\r\nimport { Weather } from '../models/weather.model';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { WeatherContract } from '../contract/weather.contract';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WeatherService extends WeatherContract {\r\n\r\n  constructor(private httpClient: HttpClient, private toastr: ToastrService) {\r\n    super();\r\n  }\r\n\r\n  \r\n  async getWeatherOfCity(country: string,city: string, useCache = true): Promise<Weather>{\r\n\r\n    if(!country || country.length == 0 || !city || city.length == 0)\r\n      return null;\r\n\r\n    let index = this.getWeatherIndexFromCache(city);\r\n    if(useCache && index >= 0)\r\n      return this.weatherCache.value[index]; // return cache\r\n\r\n    let weather: Weather = null;\r\n\r\n    try{\r\n      let selectedCityID = this.getSelectedCityID(country, city);\r\n\r\n      let conditions = await this.getCurrentConditions(selectedCityID);\r\n      let forecasts = await this.getFiveDaysDailyForecasts(selectedCityID);\r\n\r\n\r\n      weather = {ID: selectedCityID,Country: country,Name: city, WeatherData: {\r\n        CurrentConditions: conditions, WeeklyDailyForecast:forecasts\r\n      }};\r\n\r\n\r\n      let currentWeatherCache = this.weatherCache.value;\r\n\r\n      if(index >= 0)\r\n        currentWeatherCache[index] = weather;\r\n      else\r\n        currentWeatherCache.push(weather);\r\n\r\n      this.weatherCache.next(currentWeatherCache);\r\n      console.log('weather data:');\r\n      console.log(weather);\r\n      this.toastr.success(`Weather data of ${city} is beeing loaded into the screen`);\r\n    }\r\n    catch(e){\r\n      this.toastr.error(`Could not get weather of the city: ${city}`);\r\n    }\r\n\r\n    return weather;\r\n  }\r\n\r\n\r\n  public async AutoCompleteCities(city: string) : Promise<void>{\r\n\r\n    if(!city || city.length == 0)\r\n      return;\r\n\r\n    let params = new HttpParams();\r\n\r\n    params = params.append('apikey', environment.weatherAPI);\r\n    params = params.append('q',city);\r\n    params = params.append('language', this.language);\r\n    let res:any[] = [];\r\n\r\n    try{\r\n      res = await this.httpClient.get<any[]>(this.baseURL +'locations/v1/cities/autocomplete', {params: params} ).toPromise();\r\n      console.log('success');\r\n      console.log(res)\r\n      this.setGroupCities(res);\r\n      if(res.length == 0)\r\n        this.toastr.info(`There is no results for the query ${city}`);\r\n    }\r\n    catch(err){\r\n      this.toastr.error(`Could not get current auto complete of the city: ${city}`);\r\n    }\r\n  }\r\n\r\n  protected async getCurrentConditions(locationKey: string) : Promise<ConditionsResult[]>{\r\n\r\n    let params = new HttpParams();\r\n\r\n    params = params.append('apikey', environment.weatherAPI);\r\n    params = params.append('details', 'false');\r\n    params = params.append('language', this.language);\r\n    let res:any = null;\r\n\r\n    try{\r\n      res = await this.httpClient.get<ConditionsResult[]>(this.baseURL +`currentconditions/v1/${locationKey}`, {params: params} ).toPromise();\r\n    }\r\n    catch(err){\r\n      this.toastr.error('Could not get current conditions of a weather');\r\n    }\r\n    return res;\r\n  }\r\n\r\n\r\n  protected async getFiveDaysDailyForecasts(locationKey: string) : Promise<WeeklyForecast>{\r\n\r\n    let params = new HttpParams();\r\n\r\n    params = params.append('apikey', environment.weatherAPI);\r\n    params = params.append('details', 'false');\r\n    params = params.append('metric', 'true');\r\n    params = params.append('language', this.language);\r\n    let res:any = null;\r\n\r\n    try{\r\n      res = await this.httpClient.get<WeeklyForecast>(this.baseURL +`forecasts/v1/daily/5day/${locationKey}`, {params: params} ).toPromise();\r\n    }\r\n    catch(err){\r\n      this.toastr.error('Could not get five daily forecast information');\r\n    }\r\n    return res;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { WeatherModule } from './weather/weather.module';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    WeatherModule\r\n  ],\r\n  exports: [WeatherModule]\r\n})\r\nexport class SharedModule { }\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AppState } from 'src/app/app.state';\r\nimport { WeatherContract } from 'src/app/core/contract/weather.contract';\r\nimport { WeatherDetails } from 'src/app/core/models/weather.details.model';\r\nimport { WeatherType } from 'src/app/core/models/weather.model';\r\nimport * as FavoriteActions from '../../../../core/actions/favorites.actions';\r\n\r\n@Component({\r\n  selector: 'app-weather-degrees-view',\r\n  templateUrl: './weather-degrees-view.component.html',\r\n  styleUrls: ['./weather-degrees-view.component.scss']\r\n})\r\nexport class WeatherDegreesViewComponent implements OnInit {\r\n\r\n  @Input() weatherDetails: WeatherDetails;\r\n  @Input() showDescription: boolean = true;\r\n\r\n  @Output() onClickItem = new EventEmitter<any>();\r\n\r\n  unitDisplay: WeatherType;\r\n  allowMove = true;\r\n  showDelete = false;\r\n\r\n  constructor(private weatherService: WeatherContract, private store: Store<AppState>, private toastr: ToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.weatherService.getWeatherUnit().subscribe(u => {\r\n      this.unitDisplay = u;\r\n    });\r\n  }\r\n\r\n  OnClick(){\r\n    if(this.allowMove)\r\n      this.onClickItem.emit({country: this.weatherDetails.countryName, city: this.weatherDetails.cityName});\r\n      this.allowMove = true;\r\n  }\r\n\r\n  async RemoveFavorite(){\r\n    await this.store.dispatch(new FavoriteActions.RemoveFavorite(this.weatherDetails.ID));\r\n    this.toastr.info(this.weatherDetails.title + ' has been removed from your favorite list');\r\n    this.allowMove = false;\r\n  }\r\n\r\n}\r\n","<mat-card class=\"grid-container\" (click)=\"OnClick()\" (mouseenter)=\"showDelete=true\" (mouseleave)=\"showDelete=false\">\r\n  <button *ngIf=\"showDelete\" (click)=\"RemoveFavorite()\" mat-button><mat-icon>delete</mat-icon> Remove from Favorites</button>\r\n  <div class=\"title\">{{weatherDetails.title}}</div>\r\n  <div class=\"degrees\">{{weatherDetails.degrees | weatherUnit:unitDisplay}}</div>\r\n  <div *ngIf=\"showDescription == true\" class=\"description\">{{weatherDetails.description}}</div>\r\n</mat-card>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\r\nimport * as FavoriteActions from '../../../../core/actions/favorites.actions';\r\nimport { AppState } from 'src/app/app.state';\r\nimport { WeatherDetails } from 'src/app/core/models/weather.details.model';\r\nimport { Weather, WeatherType } from 'src/app/core/models/weather.model';\r\n// import { WeatherService } from 'src/app/core/services/weather.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { WeatherContract } from 'src/app/core/contract/weather.contract';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { CityGroup, LocalizedID } from 'src/app/core/models/city.result.model';\r\n\r\n\r\n\r\nexport const _filter = (opt: LocalizedID[], value: string): LocalizedID[] => {\r\n  const filterValue = value.toLowerCase();\r\n\r\n  return opt.filter(item => item.LocalizedName.toLowerCase().includes(filterValue));\r\n};\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-weather-details',\r\n  templateUrl: './weather-details.component.html',\r\n  styleUrls: ['./weather-details.component.scss']\r\n})\r\nexport class WeatherDetailsComponent implements OnInit, OnDestroy {\r\n\r\n  timerAutoComplete:any;\r\n\r\n  weatherForm: FormGroup = null;\r\n  query: string = '';\r\n  stateGroups: CityGroup[] = [];\r\n  allowAuto = false;\r\n\r\n  stateGroupOptions: Observable<CityGroup[]>;\r\n\r\n\r\n  selectedCity$ = new BehaviorSubject<{country: string, city: string}>(null);\r\n  selectedWeather: Weather = null;\r\n\r\n  unitDisplay: WeatherType;\r\n\r\n  subscriptions: Subscription[] = [];\r\n  favorites: Observable<Weather[]> = null;\r\n  isFavorite: boolean;\r\n\r\n  specificDetails: WeatherDetails[] = [];\r\n\r\n   constructor(\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private weatherService: WeatherContract,\r\n    private store: Store<AppState>,\r\n    private toastr: ToastrService) {\r\n\r\n    const navigation = this.router.getCurrentNavigation();\r\n    const state = navigation.extras.state as {countryName: string,cityName: string};\r\n    const countryName = state && state.countryName ? state.countryName : 'IL';\r\n    const cityName = state && state.cityName ? state.cityName: 'Tel Aviv';\r\n    this.selectedCity$.next({country: countryName, city: cityName});\r\n   }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n\r\n    this.weatherForm = this.formBuilder.group({\r\n      stateGroup: this.query,\r\n    });\r\n\r\n\r\n    this.favorites = this.store.select('favorites');\r\n\r\n    this.selectedCity$.subscribe(async city => {\r\n      this.selectedWeather =  await this.weatherService.getWeatherOfCity(city?.country, city?.city);\r\n\r\n      if(this.selectedWeather){\r\n        this.specificDetails = this.selectedWeather.WeatherData.WeeklyDailyForecast.DailyForecasts.map((item, i) => {\r\n          let temperature = item.Temperature.Minimum;\r\n          return {ID: this.selectedWeather.ID, title: this.weatherService.WEATHER_DAYS[i],countryName: city.country, cityName: city.city,degrees: temperature, description: null }\r\n        });\r\n\r\n        this.store.select('favorites').subscribe(x => {\r\n          this.isFavorite = x.findIndex(f => f.Name.toLowerCase() == this.selectedWeather?.Name.toLowerCase()) >= 0;\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n    this.weatherService.getWeatherUnit().subscribe(u => {\r\n      this.unitDisplay = u;\r\n    });\r\n\r\n    this.weatherService.getCityAutoComplete().subscribe(ac => {\r\n      this.stateGroups = ac;\r\n      this.allowAuto = false;\r\n      this.weatherForm.get('stateGroup')!.updateValueAndValidity({onlySelf: false, emitEvent: true});\r\n    })\r\n\r\n\r\n    this.stateGroupOptions = this.weatherForm.get('stateGroup')!.valueChanges\r\n    .pipe(\r\n      startWith(''),\r\n      map(value => this._filterGroup(value))\r\n    );\r\n\r\n    this.weatherForm.get('stateGroup')!.valueChanges.subscribe( x => {\r\n      this.query = x;\r\n    })\r\n\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.subscriptions.map( x => x.unsubscribe());\r\n  }\r\n\r\n\r\n  async AddFavorite(){\r\n   await this.store.dispatch(new FavoriteActions.AddFavorite(this.selectedWeather));\r\n   this.toastr.success(this.selectedWeather.Name + ' has been added to your favorite list');\r\n  }\r\n\r\n  async RemoveFavorite(){\r\n    await this.store.dispatch(new FavoriteActions.RemoveFavorite(this.selectedWeather.ID));\r\n    this.toastr.info(this.selectedWeather.Name + ' has been removed from your favorite list');\r\n  }\r\n\r\n  private _filterGroup(value: any): CityGroup[] {\r\n\r\n    clearTimeout(this.timerAutoComplete);\r\n    if(this.allowAuto){\r\n      this.timerAutoComplete = setTimeout(() => {\r\n        this.getCities()\r\n      }, 1000);\r\n    }\r\n    this.allowAuto = true;\r\n    return this.stateGroups;\r\n  }\r\n\r\n  getCities(){\r\n    if(this.query == '')\r\n      return;\r\n    this.weatherService.AutoCompleteCities(this.query);\r\n  }\r\n\r\n  async SelectOption(q) : Promise<void>{\r\n    this.allowAuto = false;\r\n    this.selectedCity$.next({country: q.option.group.label, city: q.option.value});\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <mat-card>\r\n    <form [formGroup]=\"weatherForm\">\r\n      <mat-form-field appearance=\"fill\">\r\n        <mat-label>States Group</mat-label>\r\n        <input type=\"text\"\r\n               matInput\r\n               formControlName=\"stateGroup\"\r\n               required\r\n               [matAutocomplete]=\"autoGroup\">\r\n          <mat-autocomplete #autoGroup=\"matAutocomplete\" (optionSelected)=\"SelectOption($event)\">\r\n            <mat-optgroup *ngFor=\"let group of stateGroupOptions | async\" [label]=\"group.country\">\r\n              <mat-option *ngFor=\"let city of group.cities\" [value]=\"city.LocalizedName\">\r\n                {{city.LocalizedName}}\r\n              </mat-option>\r\n          </mat-optgroup>\r\n        </mat-autocomplete>\r\n      </mat-form-field>\r\n    </form>\r\n  </mat-card>\r\n  <mat-card  *ngIf=\"!selectedWeather\">NO DATA</mat-card>\r\n  <mat-card class=\"data-container\" *ngIf=\"selectedWeather\">\r\n    <div class=\"data-bar\">\r\n      <div class=\"city-info\">\r\n        <div class=\"city-logo\" style=\"background-image: url(https://www.accuweather.com/images/weathericons/{{selectedWeather.WeatherData.CurrentConditions[0].WeatherIcon}}.svg);background-size: 100%;background-position: center;\"></div>\r\n        <div>{{selectedWeather.Name}}</div>\r\n        <div>\r\n          {{ selectedWeather.WeatherData.CurrentConditions[0].Temperature.Metric| weatherUnit:unitDisplay}}\r\n        </div>\r\n      </div>\r\n      <div class=\"favorite-actions\">\r\n        <div *ngIf=\"isFavorite == true\"><mat-icon>favorite</mat-icon></div>\r\n        <div *ngIf=\"isFavorite == true\"><button mat-button (click)=\"RemoveFavorite()\">Remove Favorites</button></div>\r\n        <div *ngIf=\"isFavorite == false\"><mat-icon>favorite_border</mat-icon></div>\r\n        <div *ngIf=\"isFavorite == false\"><button mat-button  (click)=\"AddFavorite()\">Add to Favorites</button></div>\r\n      </div>\r\n    </div>\r\n    <div class=\"desc\">{{selectedWeather.WeatherData.CurrentConditions[0].WeatherText}}</div>\r\n    <div class=\"data-grid\">\r\n      <app-weather-degrees-view *ngFor=\"let item of specificDetails\" [weatherDetails]=item showDescription=false></app-weather-degrees-view>\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n","<div class=\"data-grid\">\r\n  <app-weather-degrees-view *ngFor=\"let item of favorites\" [weatherDetails]=item   (onClickItem)=\"OnClickWeather($event)\"></app-weather-degrees-view>\r\n</div>\r\n<mat-card *ngIf=\"favorites.length == 0\">NO FAVORITES</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { AppState } from 'src/app/app.state';\r\nimport { WeatherContract } from 'src/app/core/contract/weather.contract';\r\nimport { WeatherDetails } from 'src/app/core/models/weather.details.model';\r\nimport { Weather } from 'src/app/core/models/weather.model';\r\n// import { WeatherService } from 'src/app/core/services/weather.service';\r\n\r\n@Component({\r\n  selector: 'app-weather-favorites',\r\n  templateUrl: './weather-favorites.component.html',\r\n  styleUrls: ['./weather-favorites.component.scss']\r\n})\r\nexport class WeatherFavoritesComponent implements OnInit {\r\n\r\n  favorites: WeatherDetails[] = [];\r\n  weatherData: Observable<Weather[]>;\r\n\r\n  constructor(private router: Router, private store: Store<AppState>, private weatherService: WeatherContract) { }\r\n\r\n  ngOnInit(): void {\r\n    this.store.select('favorites').subscribe(x => {\r\n      this.favorites = x.map(f =>  {\r\n        let temperature = f.WeatherData.CurrentConditions[0].Temperature.Metric;\r\n        return {ID: f.ID, title: f.Name,countryName: f.Country, cityName: f.Name, degrees: temperature, description: f.WeatherData.CurrentConditions[0].WeatherText}\r\n      });\r\n    });\r\n  }\r\n\r\n  OnClickWeather(cityDetails: any){\r\n    const navigationExtras: NavigationExtras = {state: {cityName: cityDetails.city, countryName: cityDetails.country}};\r\n    this.router.navigate(['home'], navigationExtras);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { WeatherDegreesViewComponent } from './components/weather-degrees-view/weather-degrees-view.component';\r\nimport { WeatherDetailsComponent } from './components/weather-details/weather-details.component';\r\nimport { WeatherFavoritesComponent } from './components/weather-favorites/weather-favorites.component';\r\nimport { MaterialModule } from 'src/app/core/modules/material/material.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { WeatherService } from 'src/app/core/services/weather.service';\r\nimport { WeatherUnitPipe } from 'src/app/core/pipes/weather-unit.pipe';\r\n\r\n\r\n@NgModule({\r\n  declarations: [WeatherDegreesViewComponent, WeatherDetailsComponent, WeatherFavoritesComponent, WeatherUnitPipe],\r\n  imports: [\r\n    CommonModule,\r\n    MaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [WeatherService],\r\n  exports: [WeatherDegreesViewComponent, WeatherDetailsComponent, WeatherFavoritesComponent]\r\n})\r\nexport class WeatherModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  weatherAPI: 'sNegvcZtoUOI1LyOWnJm0a1iYrpe9NyW'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}