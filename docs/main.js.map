{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/actions/favorites.actions.ts","./src/app/core/core.module.ts","./src/app/core/modules/material/material.module.ts","./src/app/core/reducers/favorite.reducer.ts","./src/app/core/services/weather.service.ts","./src/app/shared/shared.module.ts","./src/app/shared/weather/components/weather-degrees-view/weather-degrees-view.component.ts","./src/app/shared/weather/components/weather-degrees-view/weather-degrees-view.component.html","./src/app/shared/weather/components/weather-details/weather-details.component.ts","./src/app/shared/weather/components/weather-details/weather-details.component.html","./src/app/shared/weather/components/weather-favorites/weather-favorites.component.html","./src/app/shared/weather/components/weather-favorites/weather-favorites.component.ts","./src/app/shared/weather/weather.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { WeatherDetailsComponent } from './shared/weather/components/weather-details/weather-details.component';\r\nimport { WeatherFavoritesComponent } from './shared/weather/components/weather-favorites/weather-favorites.component';\r\n\r\nconst routes: Routes = [\r\n  {path: 'favorites', component: WeatherFavoritesComponent},\r\n  {path: 'home', component: WeatherDetailsComponent},\r\n  {path: '', pathMatch: 'full', redirectTo: 'home'},\r\n  { path: '**', redirectTo: 'home' }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n}\r\n","  <mat-toolbar class=\"toolbar-banner\">\r\n    <div class=\"logo-barber\">\r\n      <img src=\"./assets/cloudy.png\" style=\"width: 40px;height: 40px;\"/>\r\n    </div>\r\n    <span>Herolo Weather Task</span>\r\n    <div class=\"menu-left\">\r\n      <a mat-button [routerLink]=\"['home']\" routerLinkActive=\"router-link-active\"> Home </a>\r\n      <a  mat-button [routerLink]=\"['favorites']\" routerLinkActive=\"router-link-active\"> Favorites </a>\r\n\r\n    </div>\r\n  </mat-toolbar>\r\n\r\n\r\n<div class=\"wrapper\">\r\n<router-outlet></router-outlet>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { CoreModule } from './core/core.module';\r\n\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { reducer } from './core/reducers/favorite.reducer';\r\nimport { MaterialModule } from './core/modules/material/material.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    CoreModule,\r\n    SharedModule,\r\n    MaterialModule,\r\n    BrowserAnimationsModule,\r\n    ToastrModule.forRoot({\r\n      timeOut: 3500,\r\n      positionClass: 'toast-bottom-right',\r\n      progressBar: true,\r\n      progressAnimation: 'increasing',\r\n      preventDuplicates: true\r\n    }),\r\n    StoreModule.forRoot({\r\n      favorites: reducer\r\n    })\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Action } from '@ngrx/store';\r\nimport { Weather } from '../models/weather.model';\r\n\r\n\r\n\r\nexport const ADD_FAVORITE       = 'Add';\r\nexport const REMOVE_FAVORITE    = 'Remove';\r\n\r\nexport class AddFavorite implements Action{\r\n  readonly type = ADD_FAVORITE;\r\n\r\n  constructor(public payload: Weather){}\r\n}\r\n\r\nexport class RemoveFavorite implements Action {\r\n  readonly type = REMOVE_FAVORITE;\r\n\r\n  constructor(public payload: string){}\r\n\r\n}\r\n\r\n\r\n\r\nexport type Actions = AddFavorite | RemoveFavorite;\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MaterialModule } from './modules/material/material.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule\r\n\r\n  ]\r\n})\r\nexport class CoreModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {ClipboardModule} from '@angular/cdk/clipboard';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule, MatDialogRef} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    A11yModule,\r\n    ClipboardModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n    ScrollingModule\r\n  ],\r\n  providers: [{provide: MatDialogRef, useValue: []}\r\n]\r\n})\r\nexport class MaterialModule { }\r\n\r\n","import * as FavoriteActions from '../actions/favorites.actions'\r\nimport { Weather } from '../models/weather.model';\r\n\r\n\r\nexport function reducer(state: Weather[] = [], action: FavoriteActions.Actions) {\r\n  let index;\r\n    switch(action.type) {\r\n        case FavoriteActions.ADD_FAVORITE:\r\n            return [...state, action.payload];\r\n        case FavoriteActions.REMOVE_FAVORITE:\r\n            let newState = [...state];\r\n            index = newState.findIndex( x => x.ID == action.payload)\r\n            if(index >= 0)\r\n              newState.splice(index, 1);\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { WeeklyForecast } from '../models/daily.forecast.model';\r\nimport { ConditionsResult } from '../models/conditions.model';\r\nimport { CityResult } from '../models/city.result.model';\r\nimport { Weather } from '../models/weather.model';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WeatherService {\r\n  WEATHER_DAYS = ['Sun','Mon','Tue','Wed','Thu'];\r\n\r\n  private baseURL = 'https://dataservice.accuweather.com/';\r\n  private language = 'en-us';\r\n  private weatherCache: BehaviorSubject<Weather[]> = new BehaviorSubject<Weather[]>([]);\r\n\r\n  constructor(private httpClient: HttpClient, private toastr: ToastrService) {}\r\n\r\n\r\n  getAllCache() : Observable<Weather[]> {\r\n    return this.weatherCache.asObservable();\r\n  }\r\n\r\n\r\n  private getWeatherIndexFromCache(city: string){\r\n    return this.weatherCache.value.findIndex(x => x.Name.toLowerCase() == city.toLowerCase());\r\n  }\r\n\r\n  async getWeatherOfCity(city: string, useCache = true){\r\n\r\n    if(!city || city.length == 0)\r\n      return null;\r\n\r\n    let index = this.getWeatherIndexFromCache(city);\r\n    if(useCache && index >= 0)\r\n      return this.weatherCache.value[index]; // return cache\r\n\r\n    let weather: Weather = null;\r\n\r\n    try{\r\n      // call api\r\n      let searchRes = await this.getAuthocomplete(city);\r\n      if(searchRes.length == 0)\r\n        return null;\r\n\r\n      let cityDetails = searchRes[0];\r\n      let conditions = await this.getCurrentConditions(cityDetails.Key);\r\n      let forecasts = await this.getFiveDaysDailyForecasts(cityDetails.Key);\r\n\r\n\r\n      weather = {ID: cityDetails.Key,Name: cityDetails.LocalizedName, WeatherData: {\r\n        CurrentConditions: conditions, WeeklyDailyForecast:forecasts\r\n      }};\r\n\r\n\r\n      let currentWeatherCache = this.weatherCache.value;\r\n\r\n      if(index >= 0)\r\n        currentWeatherCache[index] = weather;\r\n      else\r\n        currentWeatherCache.push(weather);\r\n\r\n      this.weatherCache.next(currentWeatherCache);\r\n      this.toastr.success(`Weather data of ${city} is beeing loaded into the screen`);\r\n    }\r\n    catch(e){\r\n      this.toastr.error(`Could not get weather of the city: ${city}`);\r\n    }\r\n\r\n    return weather;\r\n  }\r\n\r\n\r\n  private async getAuthocomplete(city: string) : Promise<CityResult[]>{\r\n\r\n    if(!city || city.length == 0)\r\n      return [];\r\n\r\n    let params = new HttpParams();\r\n\r\n    params = params.append('apikey', environment.weatherAPI);\r\n    params = params.append('q',city);\r\n    params = params.append('language', this.language);\r\n    let res:any = [];\r\n\r\n    try{\r\n      res = await this.httpClient.get<CityResult>(this.baseURL +'locations/v1/cities/autocomplete', {params: params} ).toPromise();\r\n      if(res.length == 0)\r\n      this.toastr.info(`There is no city named ${city}`);\r\n    }\r\n    catch(err){\r\n      this.toastr.error(`Could not get current auto complete of the city: ${city}`);\r\n    }\r\n    return res;\r\n  }\r\n\r\n  private async getCurrentConditions(locationKey: string) : Promise<ConditionsResult[]>{\r\n\r\n    let params = new HttpParams();\r\n\r\n    params = params.append('apikey', environment.weatherAPI);\r\n    params = params.append('details', 'false');\r\n    params = params.append('language', this.language);\r\n    let res:any = null;\r\n\r\n    try{\r\n      res = await this.httpClient.get<ConditionsResult[]>(this.baseURL +`currentconditions/v1/${locationKey}`, {params: params} ).toPromise();\r\n    }\r\n    catch(err){\r\n      this.toastr.error('Could not get current conditions of a weather');\r\n    }\r\n    return res;\r\n  }\r\n\r\n\r\n  private async getFiveDaysDailyForecasts(locationKey: string) : Promise<WeeklyForecast>{\r\n\r\n    let params = new HttpParams();\r\n\r\n    params = params.append('apikey', environment.weatherAPI);\r\n    params = params.append('details', 'false');\r\n    params = params.append('metric', 'false');\r\n    params = params.append('language', this.language);\r\n    let res:any = null;\r\n\r\n    try{\r\n      res = await this.httpClient.get<WeeklyForecast>(this.baseURL +`forecasts/v1/daily/5day/${locationKey}`, {params: params} ).toPromise();\r\n    }\r\n    catch(err){\r\n      this.toastr.error('Could not get five daily forecast information');\r\n    }\r\n    return res;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { WeatherModule } from './weather/weather.module';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    WeatherModule\r\n  ],\r\n  exports: [WeatherModule]\r\n})\r\nexport class SharedModule { }\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { WeatherDetails } from 'src/app/core/models/weather.details.model';\r\n\r\n@Component({\r\n  selector: 'app-weather-degrees-view',\r\n  templateUrl: './weather-degrees-view.component.html',\r\n  styleUrls: ['./weather-degrees-view.component.scss']\r\n})\r\nexport class WeatherDegreesViewComponent implements OnInit {\r\n\r\n\r\n  @Input() weatherDetails: WeatherDetails;\r\n  @Input() showDescription: boolean = true;\r\n\r\n  @Output() onClickItem = new EventEmitter<string>();\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  OnClick(){\r\n    this.onClickItem.emit(this.weatherDetails.title);\r\n  }\r\n\r\n}\r\n","<mat-card class=\"grid-container\" (click)=\"OnClick()\">\r\n  <div class=\"title\">{{weatherDetails.title}}</div>\r\n  <div class=\"degrees\">{{weatherDetails.degrees}}</div>\r\n  <div *ngIf=\"showDescription == true\" class=\"description\">{{weatherDetails.description}}</div>\r\n</mat-card>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\r\nimport * as FavoriteActions from '../../../../core/actions/favorites.actions';\r\nimport { map } from 'rxjs/operators';\r\nimport { AppState } from 'src/app/app.state';\r\nimport { WeatherDetails } from 'src/app/core/models/weather.details.model';\r\nimport { Weather } from 'src/app/core/models/weather.model';\r\nimport { WeatherService } from 'src/app/core/services/weather.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ElementSchemaRegistry } from '@angular/compiler';\r\n\r\n@Component({\r\n  selector: 'app-weather-details',\r\n  templateUrl: './weather-details.component.html',\r\n  styleUrls: ['./weather-details.component.scss']\r\n})\r\nexport class WeatherDetailsComponent implements OnInit, OnDestroy {\r\n\r\n\r\n  weatherForm: FormGroup = null;\r\n\r\n  selectedCity$ = new BehaviorSubject<string>(null);\r\n  selectedWeather: Weather = null;\r\n\r\n  subscriptions: Subscription[] = [];\r\n  favorites: Observable<Weather[]> = null;\r\n  isFavorite: boolean;\r\n\r\n  specificDetails: WeatherDetails[] = [];\r\n\r\n   constructor(\r\n    private router: Router,\r\n    private formBuilder: FormBuilder,\r\n    private weatherService: WeatherService,\r\n    private store: Store<AppState>,\r\n    private toastr: ToastrService) {\r\n\r\n    const navigation = this.router.getCurrentNavigation();\r\n    const state = navigation.extras.state as {name: string};\r\n    const city = state && state.name ? state.name: 'Tel Aviv';\r\n    this.selectedCity$.next(city);\r\n   }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    this.favorites = this.store.select('favorites');\r\n\r\n    this.selectedCity$.subscribe(async city => {\r\n      this.selectedWeather =  await this.weatherService.getWeatherOfCity(city);\r\n\r\n      if(this.selectedWeather){\r\n        this.specificDetails = this.selectedWeather.WeatherData.WeeklyDailyForecast.DailyForecasts.map((item, i) => {\r\n          let temperature = item.Temperature.Minimum.Value + '`' +  item.Temperature.Minimum.Unit;\r\n          return {title: this.weatherService.WEATHER_DAYS[i], degrees: temperature, description: null }\r\n        });\r\n\r\n        this.store.select('favorites').subscribe(x => {\r\n          this.isFavorite = x.findIndex(f => f.Name.toLowerCase() == this.selectedWeather?.Name.toLowerCase()) >= 0;\r\n        });\r\n\r\n      }\r\n    });\r\n\r\n    this.weatherForm = this.formBuilder.group({\r\n      city: [this.selectedCity$.value, Validators.required]\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.subscriptions.map( x => x.unsubscribe());\r\n  }\r\n\r\n  async submitForm(){\r\n    this.selectedCity$.next(this.weatherForm.value.city);\r\n  }\r\n\r\n\r\n  async AddFavorite(){\r\n   await this.store.dispatch(new FavoriteActions.AddFavorite(this.selectedWeather));\r\n   this.toastr.success(this.selectedWeather.Name + ' has been added to your favorite list');\r\n  }\r\n\r\n  async RemoveFavorite(){\r\n    await this.store.dispatch(new FavoriteActions.RemoveFavorite(this.selectedWeather.ID));\r\n    this.toastr.info(this.selectedWeather.Name + ' has been removed from your favorite list');\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <mat-card>\r\n    <form [formGroup]=\"weatherForm\" (ngSubmit)=\"submitForm()\">\r\n      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n        <mat-label>City Search</mat-label>\r\n        <input matInput formControlName=\"city\" type=\"search\" placeholder=\"Ex. Ramat Gan\" value=\"Tel Aviv\">\r\n      </mat-form-field>\r\n      <button type=\"submit\" mat-button [disabled]=\"weatherForm.invalid\">Search</button>\r\n    </form>\r\n  </mat-card>\r\n  <mat-card  *ngIf=\"!selectedWeather\">NO DATA</mat-card>\r\n  <mat-card class=\"data-container\" *ngIf=\"selectedWeather\">\r\n    <div class=\"data-bar\">\r\n      <div class=\"city-info\">\r\n        <div class=\"city-logo\" style=\"background-image: url(https://www.accuweather.com/images/weathericons/{{selectedWeather.WeatherData.CurrentConditions[0].WeatherIcon}}.svg);background-size: 100%;background-position: center;\"></div>\r\n        <div>{{selectedWeather.Name}}</div>\r\n        <div>{{selectedWeather.WeatherData.CurrentConditions[0].Temperature.Metric.Value + '`' +  selectedWeather.WeatherData.CurrentConditions[0].Temperature.Metric.Unit}}</div>\r\n      </div>\r\n      <div class=\"favorite-actions\">\r\n        <div *ngIf=\"isFavorite == true\"><mat-icon>favorite</mat-icon></div>\r\n        <div *ngIf=\"isFavorite == true\"><button mat-button (click)=\"RemoveFavorite()\">Remove Favorites</button></div>\r\n        <div *ngIf=\"isFavorite == false\"><mat-icon>favorite_border</mat-icon></div>\r\n        <div *ngIf=\"isFavorite == false\"><button mat-button  (click)=\"AddFavorite()\">Add to Favorites</button></div>\r\n      </div>\r\n    </div>\r\n    <div class=\"desc\">{{selectedWeather.WeatherData.CurrentConditions[0].WeatherText}}</div>\r\n    <div class=\"data-grid\">\r\n      <app-weather-degrees-view *ngFor=\"let item of specificDetails\" [weatherDetails]=item showDescription=false></app-weather-degrees-view>\r\n    </div>\r\n  </mat-card>\r\n</div>\r\n","<div class=\"data-grid\">\r\n  <app-weather-degrees-view *ngFor=\"let item of favorites\" [weatherDetails]=item   (onClickItem)=\"OnClickWeather($event)\"></app-weather-degrees-view>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { AppState } from 'src/app/app.state';\r\nimport { WeatherDetails } from 'src/app/core/models/weather.details.model';\r\nimport { Weather } from 'src/app/core/models/weather.model';\r\nimport { WeatherService } from 'src/app/core/services/weather.service';\r\n\r\n@Component({\r\n  selector: 'app-weather-favorites',\r\n  templateUrl: './weather-favorites.component.html',\r\n  styleUrls: ['./weather-favorites.component.scss']\r\n})\r\nexport class WeatherFavoritesComponent implements OnInit {\r\n\r\n  favorites: WeatherDetails[] = [];\r\n  weatherData: Observable<Weather[]>;\r\n\r\n  constructor(private router: Router, private store: Store<AppState>, private weatherService: WeatherService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.store.select('favorites').subscribe(x => {\r\n      this.favorites = x.map(f =>  {\r\n        let temperature = f.WeatherData.CurrentConditions[0].Temperature.Metric.Value + '`' +   f.WeatherData.CurrentConditions[0].Temperature.Metric.Unit;\r\n        return {title: f.Name, degrees: temperature, description: f.WeatherData.CurrentConditions[0].WeatherText}\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n  OnClickWeather(name: string){\r\n    const navigationExtras: NavigationExtras = {state: {name: name}};\r\n    this.router.navigate(['home'], navigationExtras);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { WeatherDegreesViewComponent } from './components/weather-degrees-view/weather-degrees-view.component';\r\nimport { WeatherDetailsComponent } from './components/weather-details/weather-details.component';\r\nimport { WeatherFavoritesComponent } from './components/weather-favorites/weather-favorites.component';\r\nimport { MaterialModule } from 'src/app/core/modules/material/material.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { WeatherService } from 'src/app/core/services/weather.service';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [WeatherDegreesViewComponent, WeatherDetailsComponent, WeatherFavoritesComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [WeatherService],\r\n  exports: [WeatherDegreesViewComponent, WeatherDetailsComponent, WeatherFavoritesComponent]\r\n})\r\nexport class WeatherModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  weatherAPI: 'sNegvcZtoUOI1LyOWnJm0a1iYrpe9NyW'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}